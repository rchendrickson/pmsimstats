# You can learn more about package authoring with RStudio at:
#
#   http://r-pkgs.had.co.nz/
#
# Some useful keyboard shortcuts for package authoring:
#
#   Install Package:           'Ctrl + Shift + B'
#   Check Package:             'Ctrl + Shift + E'
#   Test Package:              'Ctrl + Shift + T'

#devtools::install_github("r-lib/devtools")


# Get tools on board
library("devtools")
library("roxygen2")
library("testthat")
library("knitr")

# Check, because SO many problems with installation...
library(devtools)
has_devel()

# Build an R.buildignore file:
use_build_ignore("scratchnotes")
use_build_ignore("WorkingScript.R")

# Look at libraries
.libPaths()

testfunc<-function(x){
  y<-x+5
  return(y)
}

testfunc(5)

# To find a function!!!
# Ctrl + "." then start typing the name.... (get back: Ctrl+F9)


#devtools::load_all()
#devtools::use_package("dplyr")
#use_package("knitr")

# Versioning:
# <major>.<minor>.<patch>
# Always start with 0.0.0.9000 (for in development stuff)

# Automatically generate the .Rd (object documentation files) with roxygen2:
#' Function to add 10 to any number
#'
#' \code{add10} returns the argument plus 10
#'
#' This is really just a test function. I could write a lot more here, but
#' I'm just trying to test out documentation via roxygen2.
#'
#' @family other functions
#'
#' @seealso
#' \link{ggplot2} for what it's using to plot
#'
#' @param x A number
#' @return \code{x} + 10
#' @examples
#' add10(1)
#' add10(20)
add10<-function(x){
  x+10
}

# To turn these commands into the .Rd files:
#devtools::document() # alterantively, press Crtl+Shift+D
  # Next make sure you preview using "?" !

#document() # Can't uncomment and then run from the file, will run in recursive loop!
# Can use Ctrl+Shift+B to rebuild and see links, too

# Create a vignette:

# 1) Run once:
#use_vignette("testvignette")

# Test workflow:

# 1) Run once:
# use_testthat()
# Now, every time you need to retest, use Crtl+Shift+T or test()
