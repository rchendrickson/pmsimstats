# Script to create a model (or family of models) of expected CDA data set

# Setup ------------------------------------------------

# Libraries
library(data.table)
library(lme4)
library(lmerTest)
library(corpcor)
library(ggplot2)
library(MASS)
library(svMisc)
library(tictoc)
library(ggpubr)
library(gridExtra)

# General options still set by hand here
rerunsims<-FALSE # safety, before accidentally save over needed data sets
wdir<-"C:\\Users\\afane\\Dropbox\\Research\\PaperDrafts\\MethodsForNof1InPsych\\Analysis\\"
rddir<-"C:\\Users\\afane\\Dropbox\\Research\\PaperDrafts\\MethodsForNof1InPsych\\Analysis\\2019PaperFocusedAnalyses\\ToSend\\"
sourcedir<-"C:\\Users\\afane\\Documents\\GitHub\\Nof1simstats\\"

# Sourced functions:
setwd(sourcedir)
source("Utilities.R")
source("dataBasedParameterSetup.R")
source("buildtrialdesign.R")
source("generateData.R")
source("censordata.R")
source("lme_analysis.R")
source("generateSimulatedResults.R")
source("plottingfunctions.R")

# Setup trial designs ---------------------------------------

tdNof11<-buildtrialdesign(
  name_longform="primary N-of-1 design",
  name_shortform="N-of-1",
  timepoints=c(4,8,9,10,11,12,16,20),
  timeptname=c('OL1','OL2','BD1','BD2','BD3','BD4','COd','COp'),
  expectancies=c(1,1,.5,.5,.5,.5,.5,.5),
  ondrug=list( 
    # Assumes on drug entire previous interval and this measurement point
    pathA=c(1,1,1,1,0,0,1,0),
    pathB=c(1,1,1,1,0,0,0,1),
    pathC=c(1,1,1,0,0,0,1,0),
    pathD=c(1,1,1,0,0,0,0,1)
  )
)


tdOL<-buildtrialdesign(
  name_longform="open label",
  name_shortform="OL",
  timepoints=cumulative(rep(2.5,8)),
  timeptname=paste("OL",1:8,sep=""),
  expectancies=rep(1,8),
  ondrug=list( 
    pathA=rep(1,8)
  )
)

tdOLBDC<-buildtrialdesign(
  name_longform="open label+blinded discontinuation",
  name_shortform="OL+BDC",
  timepoints=c(4,8,12,16,17,18,19,20),
  timeptname=c('OL1','OL2','OL3','OL4','BD1','BD2','BD3','BD4'),
  expectancies=c(1,1,1,1,.5,.5,.5,.5),
  ondrug=list( 
    pathA=c(1,1,1,1,1,1,0,0),
    pathB=c(1,1,1,1,1,0,0,0)
  )
)

tdCO<-buildtrialdesign(
  name_longform="traditional crossover",
  name_shortform="CO",
  timepoints=cumulative(rep(2.5,8)),
  timeptname=c(paste("COa",1:4,sep=""),paste("COb",1:4,sep="")),
  expectancies=rep(.5,8),
  ondrug=list( 
    # Assumes on drug entire previous interval and this measurement point
    pathA=c(1,1,1,1,0,0,0,0),
    pathB=c(0,0,0,0,1,1,1,1)
  )
)

tdPGRCT<-buildtrialdesign(
  name_longform="Parallel group RCT",
  name_shortform="PG-RCT",
  timepoints=cumulative(rep(2.5,8)),
  timeptname=paste("V",1:8,sep=""),
  expectancies=rep(.5,8),
  ondrug=list( 
    pathA=rep(1,8),
    pathB=rep(0,8)
  )
)

trialdesigns<-list(PG=tdPGRCT,OL=tdOL,OLBDC=tdOLBDC,CO=tdCO,Nof1=tdNof11)

# Gompertz function prep ------------------------------------

# Create a set of Gompertz parameters to cycle through: 

# 1) Load what we got from the hand fitting with some blank-slate assumptions:
setwd(wdir)
TR_rp<-readRDS("respparam2020.rds")
TR_bp<-readRDS("blparam2020.rds")

TRrespparam<-list(
  name="TR",
  verbaldesc="Extracted from data with blank slate assumptions",
  param=TR_rp
)
TRblparam<-list(
  name="TR",
  verbaldesc="Extracted from data with blank slate assumptions",
  param=TR_bp
)

# 2) Create some alternative response parameters:
altrespparam1<-list(
  name="FastPbBrSlowTv",
  verbaldesc="Faster Pb & Br, slower tv, all else same",
  param=data.table(
    cat=c("tv","pb","br"),
    max=TR_rp$max,
    disp=TR_rp$disp,
    rate=c(.5,.2,.2),
    sd=TR_rp$sd
  )
)

altrespparam2<-list(
  name="LargeTVsmallPb",
  verbaldesc="Large TV smaller Pb, all else same",
  param=data.table(
    cat=c("tv","pb","br"),
    max=c(9,4,11),
    disp=TR_rp$disp,
    rate=TR_rp$rate,
    sd=TR_rp$sd
  )
)

origrespparamsets<-list(TRrespparam,altrespparam1,altrespparam2)

# This is a key area, so create another, more systematic exploration of this 
# part of parameter space:

# 1) ridiculous way to make it a data table
TRlongform<-as.data.table(melt(TRrespparam$param))
TRlongform[,rp:=paste(cat,variable,sep="_")]
TRgrid<-TRlongform$value
TRgrid<-data.table(rbind(TRgrid,TRgrid,TRgrid,TRgrid,TRgrid))
setnames(TRgrid,names(TRgrid),TRlongform$rp)

#2) fill it out:
maxesgrid<-data.table(
  tv_max=c(18,3,3,8),
  pb_max=c(3,18,3,8),
  br_max=c(3,3,18,8)
)
rates<-c(.2,.35,.5)
ratesgrid<-expand.grid(
  tv_rate=rates,
  pb_rate=rates,
  br_rate=rates
)

respparamsets<-vector(mode="list",length=1+dim(maxesgrid)[1]+dim(ratesgrid)[1])
respparamsets[[1]]<-TRrespparam
for(irp in 1:dim(maxesgrid)[1]){
  op<-maxesgrid[irp,]
  newrp<-list(
    name=paste("MXtv",op$tv_max,"pb",op$pb_max,"br",op$br_max,sep=""),
    verbaldesc=paste("MXtv",op$tv_max,"pb",op$pb_max,"br",op$br_max,sep=""),
    param=data.table(
      cat=c("tv","pb","br"),
      max=as.numeric(op),
      disp=TR_rp$disp,
      rate=TR_rp$rate,
      sd=as.numeric(op)
    )
  )
  respparamsets[[irp+1]]<-newrp
}
for(irp in 1:dim(ratesgrid)[1]){
  op<-ratesgrid[irp,]
  newrp<-list(
    name=paste("RTtv",op$tv_max,"pb",op$pb_max,"br",op$br_max,sep=""),
    verbaldesc=paste("RTtv",op$tv_max,"pb",op$pb_max,"br",op$br_max,sep=""),
    param=data.table(
      cat=c("tv","pb","br"),
      max=TR_rp$max,
      disp=TR_rp$disp,
      rate=as.numeric(op),
      sd=TR_rp$sd
    )
  )
  respparamsets[[irp+1+dim(maxesgrid)[1]]]<-newrp
}

# One more version, to focus further on maxes:
TRlongform<-as.data.table(melt(TRrespparam$param))
TRlongform[,rp:=paste(cat,variable,sep="_")]
TRgrid<-TRlongform$value
TRgrid<-data.table(rbind(TRgrid,TRgrid,TRgrid,TRgrid,TRgrid))
setnames(TRgrid,names(TRgrid),TRlongform$rp)
maxes<-c(5,8,11)
maxesgrid<-expand.grid(
  tv_max=maxes,
  pb_max=maxes,
  br_max=maxes
)
respparamsetsm<-vector(mode="list",length=dim(maxesgrid)[1])
for(irp in 1:dim(maxesgrid)[1]){
  op<-maxesgrid[irp,]
  newrp<-list(
    name=paste("MXtv",op$tv_max,"pb",op$pb_max,"br",op$br_max,sep=""),
    verbaldesc=paste("MXtv",op$tv_max,"pb",op$pb_max,"br",op$br_max,sep=""),
    param=data.table(
      cat=c("tv","pb","br"),
      max=as.numeric(op),
      disp=TR_rp$disp,
      rate=TR_rp$rate,
      sd=as.numeric(op)
    )
  )
  respparamsetsm[[irp]]<-newrp
}


# 3) Create alternative baseline parameters:

altblparam1<-list(
  name="LowerSDs",
  verbaldesc="Lower SD for the BL",
  param=data.table(
    cat=c("BL","bm"),
    m=TR_bp$m,
    sd=c(10,15.36)
  )
)

blparamsets<-list(TRblparam,altblparam1)

# Set up censoring parameters ----------------------------

# Just need a single data table for this...
censorparams<-data.table(
  names=c("balanced","more of flat","more of biased","high dropout"),
  beta0=c(.05,.05 ,.05,.15),
  beta1=c(.5,.2,.8 ,.5),
  eb1=  c(2,  2  ,2  ,2 )
)

# Setup paramaters that describe how the model is implemented ----------------------

modelparams1<-expand.grid(
  N=c(50,75),
  c.bm=.6,
  carryover_t1half=c(0,.1,.2),
  c.tv=.8,c.pb=.8,c.br=.8,
  c.cf1t=.2,c.cfct=.1
)
modelparams2<-expand.grid(
  N=c(50),
  c.bm=.6,
  carryover_t1half=c(0,.2,.5),
  c.tv=.8,c.pb=.8,c.br=.8,
  c.cf1t=.4,c.cfct=.2
)
modelparams<-rbind(modelparams1,modelparams2)

coremodelparams<-expand.grid(
  N=c(35,70),
  c.bm=c(0,.3,.6),
  carryover_t1half=c(0,.1,.2),
  c.tv=.8,c.pb=.8,c.br=.8,
  c.cf1t=.2,c.cfct=.1
)
abbrevmodelparams<-expand.grid(
  N=c(70),
  c.bm=c(0,.6),
  carryover_t1half=c(0),
  c.tv=.8,c.pb=.8,c.br=.8,
  c.cf1t=.2,c.cfct=.1
)
xabbrevmodelparams2<-expand.grid(
  N=c(35),
  c.bm=c(.3),
  carryover_t1half=c(0),
  c.tv=.8,c.pb=.8,c.br=.8,
  c.cf1t=.2,c.cfct=.1
)

# Parameters on the analysis side
analysisparams<-expand.grid(useDE=FALSE,t_random_slope=FALSE)

# Run the simulations! ------------------------------------------------

if(rerunsims){

# 2020_02_19:
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams2,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_19_respRates6",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams2,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_19_respRates7",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams2,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_19_respRates8",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams2,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_19_respRates9",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams2,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_19_respRates10",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  
  
  
  
  
  
  
    # Better response paramset runs
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_18_respRates3",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsetsm,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_18_respMaxes3",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)

  # Better response paramset runs
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_18_respRates4",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsetsm,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_18_respMaxes4",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  # Better response paramset runs
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_18_respRates5",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsetsm,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1,],
    modelparams=xabbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_18_respMaxes5",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)

    
  #----
  
  
  
  # RunCoreSets:
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=origrespparamsets[1],
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=coremodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  basesavename="2020_02_18_core1",
                  nRep2save=5,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)

  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=origrespparamsets[1],
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=coremodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  basesavename="2020_02_18_core2",
                  nRep2save=5,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=origrespparamsets[1],
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=coremodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  basesavename="2020_02_18_core3",
                  nRep2save=5,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=origrespparamsets[1],
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=coremodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  basesavename="2020_02_18_core4",
                  nRep2save=5,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  Nreps<-100
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=origrespparamsets[1],
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=coremodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  basesavename="2020_02_18_core5",
                  nRep2save=5,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  
  
  
  
  
  #------
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams[1],
    modelparams=abbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_17_resp1",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=origrespparamsets[1],
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=coremodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  basesavename="2020_02_17_core2",
                  nRep2save=5,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=abbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_17_resp2",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=origrespparamsets[1],
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=coremodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  basesavename="2020_02_17_core3",
                  nRep2save=5,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=origrespparamsets[1],
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=coremodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  basesavename="2020_02_17_core4",
                  nRep2save=5,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=origrespparamsets[1],
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=coremodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  basesavename="2020_02_17_core5",
                  nRep2save=5,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=abbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_17_resp3",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=abbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_17_resp4", # completed 13/26
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)

  Nreps<-50
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsets,
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=xabbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_18_resp1",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  Nreps<-50
  simresults<-generateSimulatedResults(
    trialdesigns=list(trialdesigns$OL,trialdesigns$OLBDC,trialdesigns$CO,trialdesigns$Nof1),
    respparamsets=respparamsetsm,
    blparamsets=blparamsets[1],
    censorparams=censorparams,
    modelparams=xabbrevmodelparams,
    simparam=list(Nreps=Nreps,
                  progressiveSave=TRUE,
                  useDE=FALSE,
                  basesavename="2020_02_18_resp2maxes",
                  nRep2save=10,
                  saveunit2start=1,
                  savedir=wdir),
    analysisparams=analysisparams,
    rawdataout=FALSE)
  
  
  
    
}

